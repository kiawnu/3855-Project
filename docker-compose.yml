services:
  zookeeper:
    image: wurstmeister/zookeeper
  kafka: 
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" 
      KAFKA_ADVERTISED_HOST_NAME: localhost 
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  receiver:
    build: 
      context: receiver
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    networks:
      - microservice-net
  storage:
    build: 
      context: storage
      dockerfile: Dockerfile
    ports:
      - "8090"
    depends_on:
      - kafka
      - db
    networks:
      - microservice-net
  processing:
    build:
      context: processing
      dockerfile: Dockerfile
    ports:
     - "8100:8100"
    depends_on:
      - storage
      - receiver
    networks:
      - microservice-net
  analyzer:
    build:
      context: analyzer
      dockerfile: Dockerfile
    ports:
     - "8200:8200"
    depends_on:
      - receiver
      - storage
    networks:
      - microservice-net
    
  db:
    image: mysql
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 1
      MYSQL_USER: dev1
      MYSQL_PASSWORD: Dev1-mysql
      MYSQL_DATABASE: port-data
    ports:
      - 3306:3306
    networks:
      - microservice-net
    volumes:
      - ACIT3855-storage:/var/lib/mysql

networks:
  microservice-net:
    driver: bridge

volumes:
  ACIT3855-storage:
